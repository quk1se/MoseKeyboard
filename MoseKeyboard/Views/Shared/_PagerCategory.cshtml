@using MoseKeyboard.Models.Models.ViewModel
<style>

    .btn-class {
        background-color: rgb(25,25,25);
        border: solid 0px;
        color: darkgray;
        font-family: PT SERIF;
    }
</style>
<div class="container">
    @if (Model.TotalPages > 0)
    {
        <ul class="pagination justify-content-center">

            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="btn btn-primary, btn-class" asp-controller="Category" asp-action="Index" asp-route-pg="1">First</a>
                </li>
                <li class="page-item">
                    <a class="btn btn-primary, btn-class" asp-controller="Category" asp-action="Index" asp-route-pg="@(Model.CurrentPage - 1)">Prev</a>
                </li>
            }

            @for (var pge = Model.StartPage; pge <= Model.EndPage; pge++)
            {
                <li class="page-item @(pge == Model.CurrentPage ? "active" : "")">
                    <a class="btn btn-primary, btn-class" asp-controller="Category" asp-action="Index" asp-route-pg="@pge">@pge</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="btn btn-primary, btn-class" asp-controller="Category" asp-action="Index" asp-route-pg="@(Model.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="btn btn-primary btn-class" asp-controller="Category" asp-action="Index" asp-route-pg="@(Model.TotalPages)">Last</a>
                </li>
            }

        </ul>
    }
</div>